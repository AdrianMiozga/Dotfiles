[
  // Ctrl + Tab
  {
    "key": "ctrl+tab",
    "command": "workbench.action.nextEditor"
  },
  {
    "key": "ctrl+shift+tab",
    "command": "workbench.action.previousEditor"
  },
  // Run & Debug
  {
    "key": "alt+r",
    "command": "-toggleFindRegex",
    "when": "editorFocus"
  },
  {
    "key": "alt+r",
    "command": "ahk++.run",
    "when": "editorLangId == 'ahk' || editorLangId == 'ahk2'"
  },
  {
    "key": "alt+r",
    "command": "python.execInTerminal-icon",
    "when": "editorLangId == 'python'"
  },
  {
    "key": "alt+r",
    "command": "workbench.action.tasks.build",
    "when": "editorLangId == 'asm-collection'"
  },
  {
    "key": "alt+r",
    "command": "workbench.action.tasks.build",
    "when": "editorLangId == 'pawn'"
  },
  {
    "key": "alt+r",
    "command": "C_Cpp.BuildAndRunFile",
    "when": "editorLangId == 'c' || editorLangId == 'cpp'"
  },
  {
    "key": "alt+d",
    "command": "C_Cpp.BuildAndDebugFile",
    "when": "editorLangId == 'c' || editorLangId == 'cpp'"
  },
  {
    "key": "alt+r",
    "command": "workbench.action.debug.run",
    "when": "editorLangId == 'powershell' || editorLangId == 'typescript'"
  },
  {
    "key": "alt+r",
    "command": "vscode-postgres.runQuery",
    "when": "editorLangId == 'postgres'"
  },
  // Commands
  {
    "key": "alt+x",
    "command": "workbench.action.showCommands"
  },
  // Multiple cursors
  {
    "key": "alt+n",
    "command": "editor.action.addSelectionToNextFindMatch",
    "when": "editorFocus"
  },
  {
    "key": "shift+alt+n",
    "command": "editor.action.selectHighlights",
    "when": "editorFocus"
  },
  // Next and previous error
  {
    "key": "alt+l",
    "command": "-toggleFindInSelection",
    "when": "editorFocus"
  },
  {
    "key": "alt+l",
    "command": "editor.action.marker.next",
    "when": "editorFocus"
  },
  {
    "key": "alt+h",
    "command": "editor.action.marker.prev",
    "when": "editorFocus"
  },
  // Quickfix
  {
    "key": "alt+enter",
    "command": "editor.action.quickFix",
    "when": "editorHasCodeActionsProvider && editorTextFocus && !editorReadonly"
  },
  // Windows
  {
    "key": "ctrl+oem_3",
    "command": "-workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "alt+oem_3",
    "command": "workbench.action.terminal.toggleTerminal",
    "when": "terminal.active"
  },
  {
    "key": "alt+1",
    "command": "-workbench.action.openEditorAtIndex1"
  },
  {
    "key": "alt+1",
    "command": "workbench.view.explorer",
    "when": "viewContainer.workbench.view.explorer.enabled"
  },
  {
    "key": "alt+2",
    "command": "-workbench.action.openEditorAtIndex2"
  },
  {
    "key": "alt+2",
    "command": "workbench.action.findInFiles"
  },
  {
    "key": "alt+3",
    "command": "-workbench.action.openEditorAtIndex3"
  },
  {
    "key": "alt+3",
    "command": "workbench.view.scm",
    "when": "workbench.scm.active"
  },
  // Git
  {
    "key": "ctrl+alt+z",
    "command": "git.revertSelectedRanges",
    "when": "isInDiffEditor && !operationInProgress"
  },
  // Zooming
  {
    "key": "ctrl+numpad0",
    "command": "editor.action.fontZoomReset"
  },
  {
    "key": "ctrl+0",
    "command": "editor.action.fontZoomReset"
  },
  {
    "key": "ctrl+numpad0",
    "command": "-workbench.action.zoomReset"
  },
  {
    "key": "ctrl+oem_plus",
    "command": "editor.action.fontZoomIn"
  },
  {
    "key": "ctrl+oem_minus",
    "command": "editor.action.fontZoomOut"
  },
  {
    "key": "ctrl+oem_minus",
    "command": "-workbench.action.zoomOut"
  },
  {
    "key": "ctrl+oem_plus",
    "command": "-workbench.action.zoomIn"
  },
  // Ctrl+J and Ctrl+K for lists
  {
    "key": "ctrl+j",
    "command": "-workbench.action.togglePanel"
  },
  {
    "key": "ctrl+j",
    "command": "workbench.action.quickOpenSelectNext",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+j",
    "command": "selectNextCodeAction",
    "when": "codeActionMenuVisible"
  },
  {
    "key": "ctrl+k",
    "command": "workbench.action.quickOpenSelectPrevious",
    "when": "inQuickOpen"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevSuggestion",
    "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
  },
  {
    "key": "ctrl+k",
    "command": "selectPrevCodeAction",
    "when": "codeActionMenuVisible"
  },
  // Find file
  {
    "key": "ctrl+p",
    "command": "-extension.vim_ctrl+p",
    "when": "editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'CommandlineInProgress' || vim.active && vim.use<C-p> && !inDebugRepl && vim.mode == 'SearchInProgressMode'"
  },
  // File explorer
  {
    "key": "n",
    "command": "explorer.newFile",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "shift+n",
    "command": "explorer.newFolder",
    "when": "filesExplorerFocus && !inputFocus"
  },
  {
    "key": "r",
    "command": "renameFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "d",
    "command": "deleteFile",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  {
    "key": "y",
    "command": "filesExplorer.copy",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "x",
    "command": "filesExplorer.cut",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceIsRoot && !inputFocus"
  },
  {
    "key": "p",
    "command": "filesExplorer.paste",
    "when": "explorerViewletVisible && filesExplorerFocus && !explorerResourceReadonly && !inputFocus"
  },
  // Moving lines
  {
    "key": "ctrl+j",
    "command": "editor.action.moveLinesDownAction",
    "when": "editorTextFocus && !suggestWidgetVisible && !editorReadonly"
  },
  {
    "key": "ctrl+k",
    "command": "editor.action.moveLinesUpAction",
    "when": "editorTextFocus && !editorReadonly && !suggestWidgetVisible"
  },
  {
    "key": "ctrl+l",
    "command": "editor.action.indentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  {
    "key": "ctrl+h",
    "command": "editor.action.outdentLines",
    "when": "editorTextFocus && !editorReadonly"
  },
  // Other
  {
    "key": "ctrl+shift+c",
    "command": "-workbench.action.terminal.openNativeConsole",
    "when": "!terminalFocus"
  },
  {
    "key": "ctrl+shift+c",
    "command": "editor.action.clipboardCopyAction",
    "when": "editorTextFocus"
  },
  {
    "key": "f7",
    "command": "workbench.action.compareEditor.nextChange",
    "when": "textCompareEditorVisible"
  },
  {
    "key": "shift+f7",
    "command": "workbench.action.compareEditor.previousChange",
    "when": "textCompareEditorVisible"
  }
]
